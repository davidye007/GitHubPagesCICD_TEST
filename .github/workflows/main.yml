name: Build and Deploy Dashboard/API
on:
  push:
    branches:
      - master
  pull_request:
      branches:
        - master
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '12'
    
    - name: Install dependencies
      run: |
        cd frontend_stuff
        npm install
    
    - name: Run lint and build
      run: |
        cd frontend_stuff
        npm run lint
        npm run build
    
    # Save the dist folder as an artifact
    - name: Upload build artifact
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: frontend-dist
        path: frontend_stuff/dist  # Save only the dist folder as an artifact
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run if this is a push event
    steps:

      # Download the dist folder
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist

      - name: Set up Git user identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Pass the GitHub token to the script
        run: |
          set -e
          commit_message=$(git log -1 --pretty=%B)  # Get commit message
          echo "Updating version..."
          if [[ "$commit_message" == *"release=major"* ]]; then
            version_bump="major"
          elif [[ "$commit_message" == *"release=minor"* ]]; then
            version_bump="minor"
          elif [[ "$commit_message" == *"release=patch"* ]]; then
            version_bump="patch"
          else
            version_bump="patch"
          fi

          # update the version in package.json as it's the easiest thing to do using npm
          git checkout master
          cd frontend_stuff
          new_version=$(npm version $version_bump)  # this returs the new version number with 'v' as prefix
          cd ..

          echo "local version bump successful $new_version"
          git add frontend_stuff/package.json
          git add frontend_stuff/package-lock.json
          git commit -m "Auto update version to $new_version"
          echo "commited after version update"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin master
          git tag v"$new_version"
          git push origin --tags
          echo "pushed new version to master"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: frontend-dist
